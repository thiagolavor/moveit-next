{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/thiagolavor/moveit-next /node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/thiagolavor/moveit-next /src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActice = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActice(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: isActive ? 'Abandona ciclo' : 'Iniciar um ciclo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"AjY2B41frKXTgUrspC/Z2DjTEOY=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/thiagolavor/moveit-next /src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActice","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","setTimeout","countdownContainer","countdownButton"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,KAAK,EAAN,CADR;AAAA,MACjBI,IADiB;AAAA,MACXC,OADW;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEjBM,QAFiB;AAAA,MAEPC,WAFO;;AAIxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAIP,IAAI,GAAG,EAAxB;;AALwB,8BAQUQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CARV;AAAA;AAAA,MAQjBC,UARiB;AAAA,MAQLC,WARK;;AAAA,+BASUJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CATV;AAAA;AAAA,MASjBG,UATiB;AAAA,MASLC,WATK;;AAWxB,WAASC,cAAT,GAAyB;AACrBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAAyB;AACrBgB,MAAAA,UAAU,CAAC,YAAM;AACbf,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAER,IAFQ,CAAV;AAGH;AACJ,GANQ,EAMP,CAACE,QAAD,EAAWF,IAAX,CANO,CAAT;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACmB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAEhB,MAAM,CAACoB,eAFlB;AAGA,MAAA,OAAO,EAAEH,cAHT;AAAA,gBAKEb,QAAQ,GAAE,gBAAF,GAAoB;AAL9B;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA9CeH,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react'\nimport styles from '../styles/components/Countdown.module.css'\n\n\n\nexport function Countdown (){\n    const [time, setTime] = useState(25 * 60)\n    const [isActive, setIsActice] = useState(false)\n\n    const minutes = Math.floor(time / 60);\n    const seconds  = time % 60\n    \n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2 , '0').split('') \n    const [secondLeft, secondRight] = String(seconds).padStart(2 , '0').split('') \n    \n    function startCountdown(){\n        setIsActice(true)\n    }\n\n    useEffect(() => {\n        if (isActive && time > 0){\n            setTimeout(() => {\n                setTime(time - 1)\n            },1000)\n        }\n    },[isActive, time])\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n            <button \n            type=\"button\" \n            className={styles.countdownButton}\n            onClick={startCountdown}\n            >\n             {isActive? 'Abandona ciclo': 'Iniciar um ciclo' }\n            \n            </button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}